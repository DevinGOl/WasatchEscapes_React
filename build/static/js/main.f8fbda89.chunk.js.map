{"version":3,"sources":["reportWebVitals.js","components/HeaderComponent.js","components/FooterComponent.js","components/LoadingComponent.js","shared/baseUrl.js","components/DirectoryComponent.js","components/ResortInfoComponent.js","components/ContactComponent.js","components/HomeComponent.js","components/AboutComponent.js","redux/ActionTypes.js","redux/ActionCreators.js","components/MainComponent.js","redux/resorts.js","redux/comments.js","redux/partners.js","redux/promotions.js","redux/forms.js","App.js","redux/configureStore.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Header","props","toggleNav","bind","state","isNavOpen","isModalOpen","toggleModal","handleLogin","this","setState","event","alert","username","value","password","remember","checked","preventDefault","Fragment","Jumbotron","fluid","className","Navbar","dark","sticky","expand","NavbarBrand","href","src","height","width","alt","NavbarToggler","onClick","Collapse","isOpen","navbar","Nav","NavItem","to","Button","outline","Modal","toggle","ModalHeader","ModalBody","Form","onSubmit","FormGroup","Label","htmlFor","Input","type","id","name","innerRef","input","check","color","Component","Footer","style","role","Loading","baseUrl","RenderDirectoryItem","resort","Card","CardImg","image","CardImgOverlay","CardTitle","Directory","directory","resorts","map","isLoading","errMess","Breadcrumb","BreadcrumbItem","active","maxLength","len","val","length","CommentForm","handleSubmit","values","postComment","resortId","rating","author","text","select","model","placeholder","validators","minLength","show","component","messages","required","textarea","rows","RenderResort","in","transformProps","exitTransform","top","CardBody","CardText","description","RenderComments","comments","comment","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","ResortInfo","isNumber","isNaN","validEmail","test","Contact","firstName","lastName","phoneNum","email","agree","contactType","feedback","touched","postFeedback","resetFeedbackForm","Row","md","Col","size","offset","checkbox","RenderCard","item","Home","resortsLoading","resortsErrMess","promotion","promotionLoading","promotionErrMess","partner","partnersLoading","partnersErrMess","RenderPartner","Media","object","body","heading","PartnerList","partners","tag","list","About","CardHeader","ADD_COMMENT","ADD_COMMENTS","COMMENTS_FAILED","RESORTS_LOADING","RESORTS_FAILED","ADD_RESORTS","PROMOTIONS_LOADING","ADD_PROMOTIONS","PROMOTIONS_FAILED","ADD_PARTNERS","PARTNERS_LOADING","PARTNERS_FAILED","ActionTypes","resortsFailed","payload","addResorts","commentsFailed","addComments","dispatch","newComment","toISOString","fetch","method","JSON","stringify","headers","response","ok","error","Error","status","statusText","json","catch","console","log","message","promotionsLoading","promotionsFailed","addPromotions","promotions","partnersFailed","addPartners","mapDispatchToProps","fetchResorts","actions","reset","fetchComments","fetchPromotions","fetchPartners","Main","TransitionGroup","CSSTransition","classNames","timeout","path","filter","featured","exact","render","AboutComponent","match","params","commentsErrMess","location","key","withRouter","connect","Resorts","action","Comments","concat","Partners","Promotions","InitialFeedback","store","createStore","combineReducers","createForms","feedbackForm","applyMiddleware","thunk","logger","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f8fbda89.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { Component }  from 'react';\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron,\n    Button, Modal, ModalHeader, ModalBody,\n    Form, FormGroup, Input, Label } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\n\nclass Header extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.toggleNav = this.toggleNav.bind(this);\n        this.state = {\n          isNavOpen: false,\n          isModalOpen: false\n        };\n\n        this.toggleNav = this.toggleNav.bind(this);\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleLogin = this.handleLogin.bind(this);\n\n    }\n\n    toggleNav() {\n        this.setState({\n            isNavOpen: !this.state.isNavOpen\n        });\n    }\n\n    toggleModal() {\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        });\n    }\n\n    handleLogin(event) {\n        alert(`Username: ${this.username.value} Password: ${this.password.value} Remember: ${this.remember.checked}`);\n        this.toggleModal();\n        event.preventDefault();\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <Jumbotron fluid>\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col\">\n                                <h1>Wasatch Escapes</h1>\n                                <h2>Escape Your Ordinary</h2>\n                            </div>\n                        </div>\n                    </div>\n                </Jumbotron>\n\n                <Navbar dark sticky=\"top\" expand=\"md\">\n                    <div className=\"container\">\n                        <NavbarBrand className=\"mr-auto\" href=\"/\"><img src=\"/assets/images/logo1.png\" height=\"50\" width=\"50\" alt=\"Wasatch Logo\" /></NavbarBrand>\n                        <NavbarToggler onClick={this.toggleNav} />\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\n                            <Nav navbar>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/home\">\n                                       <h4> <i className=\"fa fa-home fa-lg\" />Home</h4>\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/directory\">\n                                       <h4> <i className=\"fa fa-list fa-lg\" /> Directory</h4>\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/aboutus\">\n                                      <h4>  <i className=\"fa fa-info fa-lg\" /> About</h4>\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/contactus\">\n                                     <h4>   <i className=\"fa fa-address-card fa-lg\" /> Contact Us </h4>\n                                    </NavLink>\n                                </NavItem>\n                            </Nav>\n                            <span className=\"navbar-text ml-auto\">\n                                <Button outline onClick={this.toggleModal}>\n                                    <i className=\"fa fa-sign-in fa-lg\" /> Login\n                                </Button>\n                            </span>\n                        </Collapse>\n                    </div>\n                </Navbar>\n\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\n                    <ModalBody>\n                    <Form onSubmit={this.handleLogin}>\n                            <FormGroup>\n                                <Label htmlFor=\"username\">Username</Label>\n                                <Input type=\"text\" id=\"username\" name=\"username\"\n                                    innerRef={input => this.username = input} />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label htmlFor=\"password\">Password</Label>\n                                <Input type=\"password\" id=\"password\" name=\"password\"\n                                    innerRef={input => this.password = input} />\n                            </FormGroup>\n                            <FormGroup check>\n                                <Label check>\n                                    <Input type=\"checkbox\" name=\"remember\"\n                                        innerRef={input => this.remember = input} />\n                                    Remember me\n                                </Label>\n                            </FormGroup>\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\n                        </Form>\n                    </ModalBody>\n                </Modal>\n\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Header;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Footer(props) {\n    return (\n        <footer className=\"site-footer\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-4 col-sm-2 offset-1\">\n                        <h5>Links</h5>\n                        <ul className=\"list-unstyled\">\n                            <li><Link style={{color:'black'}} to='/home'>Home</Link></li>\n                            <li><Link style={{color:'black'}} to='/directory'>Directory</Link></li>\n                            <li><Link style={{color:'black'}} to='/aboutus'>About</Link></li>\n                            <li><Link style={{color:'black'}} to='/contactus'>Contact</Link></li>\n                        </ul>\n                    </div>\n                    <div className=\"col-6 col-sm-3 text-center\">\n                        <h5>Social</h5>\n                        <a className=\"btn btn-social-icon btn-instagram\" href=\"http://instagram.com/\"><i className=\"fa fa-instagram\" /></a>{' '}\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/\"><i className=\"fa fa-facebook\" /></a>{' '}\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\" /></a>{' '}\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\" /></a>\n                    </div>\n                    <div className=\"col-sm-4 text-center\">\n                        <a role=\"button\" className=\"btn btn-link\" href=\"tel:+5555555555\" style={{color:'black'}}><i className=\"fa fa-phone\" /> 1-206-555-1234</a><br />\n                        <a role=\"button\" className=\"btn btn-link\" href=\"mailto:notreal@notreal.co\" style={{color:'black'}}><i className=\"fa fa-envelope-o\" /> escape@wasatchescapes.com</a>\n                    </div>\n                </div>\n            </div>\n        </footer>\n    );\n}\n\nexport default Footer;","import React from 'react';\n\nexport const Loading = () => {\n    return (\n        <div className=\"col\">\n            <i className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\" />\n            <p>Loading...</p>\n        </div>\n    );\n};","export const baseUrl = 'http://localhost:3001/';\n\n\n","import React from 'react';\nimport { Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\n\n\n\n\nfunction RenderDirectoryItem({resort}) {\n    return (\n        <Card>\n            <Link to={`/directory/${resort.id}`}>\n            <CardImg width=\"100%\" src={baseUrl + resort.image} alt={resort.name} />\n            <CardImgOverlay>\n                <CardTitle>{resort.name}</CardTitle>\n            </CardImgOverlay>\n            </Link>\n        </Card>\n    );\n}\n\n\nfunction Directory(props) {\n\n        const directory = props.resorts.resorts.map(resort => {\n            return (\n                <div key={resort.id} className = \"col-md-5 m-1\">\n                 <RenderDirectoryItem resort={resort} />\n                </div>\n            );\n        });\n        if (props.resorts.isLoading) {\n            return (\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <Loading />\n                    </div>\n                </div>\n            );\n        }\n        if (props.resorts.errMess) {\n            return (\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <h4>{props.resorts.errMess}</h4>\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        return (\n            <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col\">\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>Directory</BreadcrumbItem>\n                    </Breadcrumb>\n                    <h2>Directory</h2>\n                    <hr />\n                </div>\n            </div>\n            <div className=\"row\">\n                {directory}\n            </div>\n        </div>\n        );\n    }\n\n\nexport default Directory;","import React, { Component } from 'react';\nimport { Card, CardImg, CardText, CardBody, Button, Breadcrumb, BreadcrumbItem, Modal, ModalBody, Label } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Loading } from './LoadingComponent';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\nimport ModalHeader from 'reactstrap/lib/ModalHeader';\nimport { baseUrl } from '../shared/baseUrl';\n\n\nconst maxLength = len => val => !val || (val.length <= len);\nconst minLength = len => val => val && (val.length >= len);\n\nclass CommentForm extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isModalOpen: false\n        };\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    toggleModal() {\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        });\n    }\n\n    handleSubmit(values) {\n        this.toggleModal();\n        this.props.postComment(this.props.resortId, values.rating, values.author, values.text);\n\n    }\n    render() {\n        return (\n            <>\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\n                    <ModalBody>\n                        <LocalForm onSubmit={this.handleSubmit}>\n                            <div className=\"form-group\">\n                                <Label htmlFor=\"rating\">Rating</Label>\n                                <Control.select className=\"form-control\" name=\"rating\" id=\"rating\" model=\".rating\">\n                                    <option>1</option>\n                                    <option>2</option>\n                                    <option>3</option>\n                                    <option>4</option>\n                                    <option>5</option>\n                                </Control.select>\n                            </div>\n                            <div className=\"form-group\">\n                                <Label htmlFor=\"author\">Your Name</Label>\n                                <Control.text className=\"form-control\" model=\".author\" id=\"author\" name=\"author\" placeholder=\"Your Name\"\n                                    validators={{\n                                        minLength: minLength(2),\n                                        maxLength: maxLength(15)\n                                    }}\n                                />\n                                <Errors\n                                    className=\"text-danger\"\n                                    model=\".author\"\n                                    show=\"touched\"\n                                    component=\"div\"\n                                    messages={{\n                                        required: 'Required',\n                                        minLength: 'Must be at least 2 characters',\n                                        maxLength: 'Must be 15 characters or less'\n                                    }}\n                                />\n\n                            </div>\n                            <div className=\"form-group\">\n                                <Label htmlFor=\"text\">Comment</Label>\n                                <Control.textarea className=\"form-control\" rows=\"6\" model=\".text\" id=\"text\" name=\"text\" />\n                            </div>\n                            <Button color=\"primary\" type=\"submit\">Submit</Button>\n                        </LocalForm>\n                    </ModalBody>\n                </Modal>\n                <Button onClick={this.toggleModal}><i className=\"fa-lg fa fa-pencil\" /> Submit Comment\n                </Button>\n            </>\n        );\n    };\n}\n\nfunction RenderResort({ resort }) {\n    return (\n        <div className=\"col-md-5 m-1\">\n            <FadeTransform\n                in\n                transformProps={{\n                    exitTransform: 'scale(0.5) translateY(-50%)'\n                }}>\n                <Card>\n                    <CardImg top src={baseUrl + resort.image} alt={resort.name} />\n                    <CardBody>\n                        <CardText>{resort.description}</CardText>\n                    </CardBody>\n                </Card>\n            </FadeTransform>\n        </div>\n    );\n}\n\nfunction RenderComments({ comments, postComment, resortId }) {\n    if (comments) {\n        return (\n            <div className=\"col-md-5 m-1\">\n                <h4>Comments</h4>\n                <Stagger in>\n                    {\n                        comments.map(comment => {\n                            return (\n                                <Fade in key={comment.id}>\n                                    <div>\n                                        <p>\n                                            {comment.text}<br />\n                                            -- {comment.author} {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit' }).format(new Date(Date.parse(comment.date)))}\n\n                                        </p>\n                                    </div>\n                                </Fade>\n                            );\n                        })\n                    }\n                </Stagger>\n                <CommentForm resortId={resortId} postComment={postComment} />\n            </div>\n        );\n    }\n    return <div />\n}\n\nfunction ResortInfo(props) {\n    if (props.isLoading) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Loading />\n                </div>\n            </div>\n        );\n    }\n    if (props.errMess) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <h4>{props.errMess}</h4>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    if (props.resort) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <Breadcrumb>\n                            <BreadcrumbItem><Link to=\"/directory\">Directory</Link></BreadcrumbItem>\n                            <BreadcrumbItem active>{props.resort.name}</BreadcrumbItem>\n                        </Breadcrumb>\n                        <h2>{props.resort.name}</h2>\n                        <hr />\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <RenderResort resort={props.resort} />\n                    <RenderComments\n                        comments={props.comments}\n                        postComment={props.postComment}\n                        resortId={props.resort.id}\n                    />\n                </div>\n            </div>\n        );\n    }\n    return <div />\n}\n\nexport default ResortInfo;","import React, { Component } from 'react';\nimport { Breadcrumb, BreadcrumbItem, Button, Label, Col, Row } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Control, Form, Errors } from 'react-redux-form';\n\nconst required = val => val && val.length;\nconst maxLength = len => val => !val || (val.length <= len);\nconst minLength = len => val => val && (val.length >= len);\nconst isNumber = val => !isNaN(+val);\nconst validEmail = val => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\n\nclass Contact extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            firstName: '',\n            lastName: '',\n            phoneNum: '',\n            email: '',\n            agree: false,\n            contactType: 'By Phone',\n            feedback: '',\n            touched: {\n                firstName: false,\n                lastName: false,\n                phoneNum: false,\n                email: false\n            }\n        };\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n\n    handleSubmit(values) {\n        this.props.postFeedback(values);\n        this.props.resetFeedbackForm();\n    }\n\n    render() {\n\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <Breadcrumb>\n                            <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                            <BreadcrumbItem active>Contact Us</BreadcrumbItem>\n                        </Breadcrumb>\n                        <h2>Contact Us</h2>\n                        <hr />\n                    </div>\n                </div>\n\n                <div className=\"row row-content align-items-center\">\n                    <div className=\"col-sm-4\">\n                        <h5>Our Address</h5>\n                        <address>\n                            The Cottonwood Canyons<br />\n                            Salt Lake City, UT\n                        </address>\n                    </div>\n                    <div className=\"col\">\n                        <a role=\"button\" className=\"btn btn-link\" href=\"tel:+12065551234\"><i className=\"fa fa-phone\" /> 1-206-555-1234</a><br />\n                        <a role=\"button\" className=\"btn btn-link\" href=\"mailto:fakeemail@fakeemail.co\"><i className=\"fa fa-envelope-o\" /> escape@WasatchEscapes.com</a>\n                    </div>\n                </div>\n\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h2>Send us your Feedback</h2>\n                        <hr />\n                    </div>\n                    <div className=\"col-md-10\">\n                        <Form model=\"feedbackForm\" onSubmit={values => this.handleSubmit(values)}>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"firstName\" md={2}>First Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".firstName\" id=\"firstName\" name=\"firstName\"\n                                        placeholder=\"First Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, \n                                            minLength: minLength(2),\n                                            maxLength: maxLength(15)\n                                        }}\n                                         />\n                                         <Errors\n                                        className=\"text-danger\"\n                                        model=\".firstName\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be at least 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"lastName\" md={2}>Last Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".lastName\" id=\"lastName\" name=\"lastName\"\n                                        placeholder=\"Last Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            minLength: minLength(2),\n                                            maxLength: maxLength(15)\n                                        }}\n                                         />\n                                          <Errors\n                                        className=\"text-danger\"\n                                        model=\".lastName\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be at least 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"phoneNum\" md={2}>Phone</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".phoneNum\" id=\"phoneNum\" name=\"phoneNum\"\n                                        placeholder=\"Phone number\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            minLength: minLength(10),\n                                            maxLength: maxLength(15),\n                                            isNumber\n                                        }}\n                                         />\n                                          <Errors\n                                        className=\"text-danger\"\n                                        model=\".phoneNum\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be at least 10 numbers',\n                                            maxLength: 'Must be 15 numbers or less',\n                                            isNumber: 'Must be a number'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\n                                        placeholder=\"Email\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            validEmail\n                                        }}\n                                         />\n                                         <Errors\n                                        className=\"text-danger\"\n                                        model=\".email\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            validEmail: 'Invalid email address'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{ size: 4, offset: 2 }}>\n                                    <div className=\"form-check\">\n                                        <Label check>\n                                            <Control.checkbox\n                                                model=\".agree\"\n                                                name=\"agree\"\n                                                className=\"form-check-input\"\n                                                /> {' '}\n                                            <strong>May we contact you?</strong>\n                                        </Label>\n                                    </div>\n                                </Col>\n                                <Col md={4}>\n                                    <Control.select model=\".contactType\" name=\"contactType\"\n                                        className=\"form=control\">\n                                        <option>By Phone</option>\n                                        <option>By Email</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"feedback\" md={2}>Your Feedback</Label>\n                                <Col md={10}>\n                                    <Control.textarea model=\".feedback\" id=\"feedback\" name=\"feedback\"\n                                        rows=\"12\"\n                                        className=\"form-control\" />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{ size: 10, offset: 2 }}>\n                                    <Button type=\"submit\" color=\"primary\">\n                                        Send Feedback\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Contact;","import React from 'react';\nimport { Card, CardImg, CardText, CardBody, CardTitle } from 'reactstrap';\nimport { Loading } from './LoadingComponent';\nimport { FadeTransform } from 'react-animation-components';\nimport { baseUrl } from '../shared/baseUrl';\n\n\n\nfunction RenderCard({item, isLoading, errMess}) {\n    if (isLoading) {\n        return <Loading />;\n    }\n    if (errMess) {\n        return <h4>{errMess}</h4>;\n    }\n    return (\n        <FadeTransform\n        in\n        transformProps={{\n            exitTransform: 'scale(0.5) translateY(50%)'\n        }}>\n        <Card>\n            <CardImg src={baseUrl + item.image} alt={item.name} />\n            <CardBody>\n                <CardTitle>{item.name}</CardTitle>\n                <CardText>{item.description}</CardText>\n            </CardBody>\n        </Card>\n        </FadeTransform>\n    );\n}\n\nfunction Home(props) {\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-md m-1\">\n                    <RenderCard item={props.resort}\n                    isLoading={props.resortsLoading}\n                    errMess={props.resortsErrMess} />\n                </div>\n                <div className=\"col-md m-1\">\n                    <RenderCard item={props.promotion}\n                    isLoading={props.promotionLoading}\n                    errMess={props.promotionErrMess} />\n                </div>\n                <div className=\"col-md m-1\">\n                    <RenderCard item={props.partner}\n                    isLoading={props.partnersLoading}\n                    errMess={props.partnersErrMess} />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Home;","import React from 'react';\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\nimport { Fade, Stagger } from 'react-animation-components';\n\nfunction RenderPartner({ partner }) {\n    if (partner) {\n        return (\n            < >\n                <Media\n                    object\n                    src={baseUrl + partner.image}\n                    alt={partner.name}\n                    width=\"150\" />\n                <Media\n                    body\n                    className=\"ml-5 mb-4\">\n                    <Media\n                        heading>\n                        {partner.name}\n                    </Media>\n                    {partner.description}\n                </Media>\n            </>\n        );\n    }\n    return < div />;\n}\n\nfunction PartnerList(props) {\n\n    const partners = props.partners.partners.map(partner => {\n        return (\n            <Fade in key={partner.id}>\n                <Media tag=\"li\">\n                    <RenderPartner partner={partner} />\n                </Media>\n            </Fade>\n        );\n    });\n    if (props.partners.isLoading) {\n        return (<Loading />\n        )\n    }\n    if (props.partners.errMess) {\n        return (<div className=\"col\">\n            <h4>{props.partners.errMess}</h4>\n        </div>\n        )\n    }\n    return (\n        <div className=\"col mt-4\">\n\n            <Media list>\n                <Stagger in>\n                    {partners}\n                </Stagger>\n\n            </Media>\n\n        </div>\n    )\n}\n\nfunction About(props) {\n\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col\">\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>About Us</BreadcrumbItem>\n                    </Breadcrumb>\n                    <h2>About Us</h2>\n                    <hr />\n                </div>\n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-sm-6\">\n                    <h3>Our Mission</h3>\n                    <p>We promote and provide information on the ski resorts of Utah, and help you to experience the best of the Wasatch! From current conditions to an interactive mobile app, visit us for all of your winter information needs!</p>\n                </div>\n                <div className=\"col-sm-6\">\n                    <Card>\n                        <CardHeader className=\"bg-dark text-white\"><h3>Facts At a Glance</h3></CardHeader>\n                        <CardBody>\n                            <dl className=\"row\">\n                                <dt className=\"col-6\">Founded</dt>\n                                <dd className=\"col-6\">March 28, 2019</dd>\n                                <dt className=\"col-6\">No. of Resorts in 2019</dt>\n                                <dd className=\"col-6\">8</dd>\n                                <dt className=\"col-6\">No. of Reviews in 2019</dt>\n                                <dd className=\"col-6\">3234</dd>\n                                <dt className=\"col-6\">Employees</dt>\n                                <dd className=\"col-6\">19</dd>\n                            </dl>\n                        </CardBody>\n                    </Card>\n                </div>\n                <div className=\"col\">\n                    <Card className=\"bg-light mt-3\">\n                        <CardBody>\n                            <blockquote className=\"blockquote\">\n                                <p className=\"mb-0\">\"Well, if you find yourself falling apart, Well, I am sure I could steer, The Great Salt Lake.\"</p>\n                                <footer className=\"blockquote-footer\">Band of Horses{' '}\n                                \n                                </footer>\n                            </blockquote>\n                        </CardBody>\n                    </Card>\n                </div>\n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12\">\n                    <h3>Community Partners</h3>\n                </div>\n                <PartnerList partners={props.partners} />\n                </div>\n            </div>\n    );\n}\n\nexport default About;","export const ADD_COMMENT = 'ADD_COMMENT';\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\n\nexport const RESORTS_LOADING = 'RESORTS_LOADING';\nexport const RESORTS_FAILED = 'RESORTS_FAILED';\nexport const ADD_RESORTS = 'ADD_RESORTS';\n\nexport const PROMOTIONS_LOADING = 'PROMOTIONS_LOADING';\nexport const ADD_PROMOTIONS = 'ADD_PROMOTIONS';\nexport const PROMOTIONS_FAILED = 'PROMOTIONS_FAILED';\n\nexport const ADD_PARTNERS = 'ADD_PARTNERS';\nexport const PARTNERS_LOADING =  'PARTNERS_LOADING';\nexport const PARTNERS_FAILED =  'PARTNERS_FAILED';","import * as ActionTypes from './ActionTypes';\nimport { baseUrl } from '../shared/baseUrl';\n\n\nexport const fetchResorts = () => dispatch => {\n\n    dispatch(resortsLoading());\n\n    return fetch(baseUrl + 'resorts')\n        .then(response => {\n            if (response.ok) {\n                return response;\n            } else {\n                const error = new Error(`Error ${response.status}: ${response.statusText}`);\n                error.response = response;\n                throw error;\n            }\n        },\n            error => {\n                const errMess = new Error(error.message);\n                throw errMess;\n            }\n        )\n        .then(response => response.json())\n        .then(resorts => dispatch(addResorts(resorts)))\n        .catch(error => dispatch(resortsFailed(error.message)));\n\n};\n\nexport const resortsLoading = () => ({\n    type: ActionTypes.RESORTS_LOADING\n});\n\nexport const resortsFailed = errMess => ({\n    type: ActionTypes.RESORTS_FAILED,\n    payload: errMess\n});\n\nexport const addResorts = resorts => ({\n    type: ActionTypes.ADD_RESORTS,\n    payload: resorts\n});\n\nexport const fetchComments = () => dispatch => {\n    return fetch(baseUrl + 'comments')\n        .then(response => {\n            if (response.ok) {\n                return response;\n            } else {\n                const error = new Error(`Error ${response.status}: ${response.statusText}`);\n                error.response = response;\n                throw error;\n            }\n        },\n            error => {\n                const errMess = new Error(error.message);\n                throw errMess;\n            }\n        )\n        .then(response => response.json())\n        .then(comments => dispatch(addComments(comments)))\n        .catch(error => dispatch(commentsFailed(error.message)));\n\n};\n\nexport const commentsFailed = errMess => ({\n    type: ActionTypes.COMMENTS_FAILED,\n    payload: errMess\n});\n\nexport const addComments = comments => ({\n    type: ActionTypes.ADD_COMMENTS,\n    payload: comments\n});\n\nexport const addComment = comment => ({\n    type: ActionTypes.ADD_COMMENT,\n    payload: comment\n});\n\n\nexport const postComment = (resortId, rating, author, text) => dispatch => {\n    const newComment ={\n        resortId: resortId,\n        rating: rating,\n        author: author,\n        text: text\n    };\n        newComment.date = new Date().toISOString();\n\n        return fetch(baseUrl + 'comments', {\n            method: \"POST\",\n            body: JSON.stringify(newComment),\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        })\n        .then(response => {\n                if (response.ok) {\n                    return response;\n                } else {\n                    const error = new Error(`Error ${response.status}: ${response.statusText}`);\n                    error.response = response;\n                    throw error;\n                }\n            },\n            error => { throw error; }\n        )\n        .then(response => response.json())\n        .then(response => dispatch(addComment(response)))\n        .catch(error => {\n            console.log('post comment', error.message);\n            alert('Your comment could not be posted\\nError: ' + error.message);\n        });\n};\n\nexport const fetchPromotions = () => dispatch => {\n    dispatch(promotionsLoading());\n\n    return fetch(baseUrl + 'promotions')\n        .then(response => {\n            if (response.ok) {\n                return response;\n            } else {\n                const error = new Error(`Error ${response.status}: ${response.statusText}`);\n                error.response = response;\n                throw error;\n            }\n        },\n            error => {\n                const errMess = new Error(error.message);\n                throw errMess;\n            }\n        )\n        .then(response => response.json())\n        .then(promotions => dispatch(addPromotions(promotions)))\n        .catch(error => dispatch(promotionsFailed(error.message)));\n\n};\n\nexport const promotionsLoading = () => ({\n    type: ActionTypes.PROMOTIONS_LOADING\n});\n\nexport const promotionsFailed = errMess => ({\n    type: ActionTypes.PROMOTIONS_FAILED,\n    payload: errMess\n});\n\nexport const addPromotions = promotions => ({\n    type: ActionTypes.ADD_PROMOTIONS,\n    payload: promotions\n});\n\nexport const fetchPartners = () => dispatch => {\n\n    dispatch(partnersLoading());\n\n    return fetch(baseUrl + 'partners')\n        .then(response => {\n            if (response.ok) {\n                return response;\n            } else {\n                const error = new Error(`Error ${response.status}: ${response.statusText}`);\n                error.response = response;\n                throw error;\n            }\n        },\n            error => {\n                const errMess = new Error(error.message);\n                throw errMess;\n            })\n        .then(response => response.json())\n        .then(partners => dispatch(addPartners(partners)))\n        .catch(error => dispatch(partnersFailed(error.message)));\n};\n\nexport const partnersLoading = () => ({\n    type: ActionTypes.PARTNERS_LOADING\n});\n\nexport const partnersFailed = errMess => ({\n    type: ActionTypes.PARTNERS_FAILED,\n    payload: errMess\n});\n\nexport const addPartners = partners => ({\n    type: ActionTypes.ADD_PARTNERS,\n    payload: partners\n});\n\nexport const postFeedback = (feedback) => () =>  {\n\n    return fetch(baseUrl + 'feedback', {\n        method: \"POST\",\n        body: JSON.stringify(feedback),\n        headers: {\n            \"Content-Type\": \"application/json\"\n        }\n    })\n        .then(response => {\n            if (response.ok) {\n                return (response);\n            } else {\n                const error = new Error(`Error ${response.status}: ${response.statusText}`);\n                error.response = response;\n                throw error;\n            }\n        },\n            error => { throw error; }\n        )\n        .then(response => response.json())\n        .then(response => alert(`Thank you for your feedback. ${JSON.stringify(response)}`) )\n        .catch(error => {\n            console.log('post feedback', error.message);\n            alert('Your feedback could not be posted\\nError: ' + error.message);\n        });\n};","import React, { Component } from 'react';\nimport Header from './HeaderComponent';\nimport Footer from './FooterComponent';\nimport Directory from './DirectoryComponent';\nimport ResortInfo from './ResortInfoComponent';\nimport Contact from './ContactComponent';\nimport Home from './HomeComponent';\nimport AboutComponent from './AboutComponent';\nimport { actions } from 'react-redux-form';\nimport { postComment, fetchResorts, fetchComments,fetchPromotions, fetchPartners, postFeedback } from '../redux/ActionCreators';\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = state => {\n    return {\n        resorts: state.resorts,\n        comments: state.comments,\n        partners: state.partners,\n        promotions: state.promotions\n    };\n};\n\nconst mapDispatchToProps = {\n    postComment: (resortId, rating, author, text) => (postComment(resortId, rating, author, text)),\n    fetchResorts: () => (fetchResorts()),\n    resetFeedbackForm: () => (actions.reset('feedbackForm')),\n    fetchComments: () => (fetchComments()),\n    fetchPromotions: () => (fetchPromotions()),\n    fetchPartners: () => (fetchPartners()),\n    postFeedback:(feedback) => (postFeedback(feedback))\n\n};\n\nclass Main extends Component {\n   \n    componentDidMount() {\n        this.props.fetchResorts();\n        this.props.fetchComments();\n        this.props.fetchPromotions();\n        this.props.fetchPartners();\n    }\n\n    render() {\n\n        const HomePage = () => {\n            return (\n                <Home\n                resort={this.props.resorts.resorts.filter(resort => resort.featured)[0]}\n                resortsLoading={this.props.resorts.isLoading}\n                resortsErrMess={this.props.resorts.errMess}\n                promotion={this.props.promotions.promotions.filter(promotion => promotion.featured)[0]}\n                promotionLoading={this.props.promotions.isLoading}\n                promotionErrMess={this.props.promotions.errMess}\n                partner={this.props.partners.partners.filter(partner => partner.featured)[0]}\n                partnersLoading={this.props.partners.isLoading}\n                partnersErrMess={this.props.partners.errMess} />\n            );\n        };\n\n        const ResortWithId = ({match}) => {\n            return (\n                <ResortInfo \n                    resort={this.props.resorts.resorts.filter(resort => resort.id === +match.params.resortId)[0]}\n                    isLoading={this.props.resorts.isLoading}\n                    errMess={this.props.resorts.errMess}\n                    comments={this.props.comments.comments.filter(comment => comment.resortId === +match.params.resortId)}\n                    commentsErrMess={this.props.comments.errMess}\n                    postComment={this.props.postComment}\n                />\n            );\n        }; \n\n        return (\n            <div>\n                <Header />\n                <TransitionGroup>\n                    <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\n                <Switch>\n                    <Route path='/home' component={HomePage} />\n                    <Route exact path='/directory' render={() => <Directory resorts={this.props.resorts} />} />\n                    <Route exact path='/aboutus' render={() => <AboutComponent partners={this.props.partners} />} />\n                    <Route path='/directory/:resortId' component={ResortWithId} />\n                    <Route exact path='/contactus' render={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm} />} />\n                    <Redirect to='/home' />\n                </Switch>\n                </CSSTransition>\n                </TransitionGroup>\n                <Footer />\n            </div>\n        );\n    };\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));","import * as ActionTypes from './ActionTypes';\n\nexport const Resorts = (state = {\n    isLoading: true,\n    errMess: null,\n    resorts: []\n}, action) => {\nswitch (action.type) {\n    case ActionTypes.ADD_RESORTS:\n        return {...state, isLoading: false, errMess: null, resorts: action.payload};\n    case ActionTypes.RESORTS_LOADING:\n        return {...state, isLoading: true, errMess: null, resorts: []};\n    case ActionTypes.RESORTS_FAILED:\n        return {...state, isLoading: false, errMess: action.payload};\n    default:\n        return state;\n}\n};","import * as ActionTypes from './ActionTypes';\n\nexport const Comments = (state = { errMess: null, comments: []}, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_COMMENTS:\n            return {...state, errMess: null, comments: action.payload};\n\n        case ActionTypes.COMMENTS_FAILED:\n            return {...state, errMess: action.payload};\n\n        case ActionTypes.ADD_COMMENT:\n            const comment = action.payload;\n            return {...state, comments: state.comments.concat(comment)};\n\n        default:\n            return state;\n    }\n};","import * as ActionTypes from './ActionTypes';\n\nexport const Partners = (state = {\n    isLoading: true,\n    errMess: null,\n    partners: []\n}, action) => {\nswitch (action.type) {\n    case ActionTypes.ADD_PARTNERS:\n        return {...state, isLoading: false, errMess: null, partners: action.payload};\n    case ActionTypes.PARTNERS_LOADING:\n        return {...state, isLoading: true, errMess: null, partners: []};\n    case ActionTypes.PARTNERS_FAILED:\n        return {...state, isLoading: false, errMess: action.payload};\n    default:\n        return state;\n}\n};","import * as ActionTypes from './ActionTypes';\n\nexport const Promotions = (state = { isLoading: true,\n                                        errMess: null,\n                                        promotions: [] }, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_PROMOTIONS:\n            return {...state, isLoading: false, errMess: null, promotions: action.payload};\n\n        case ActionTypes.PROMOTIONS_LOADING:\n            return {...state, isLoading: true, errMess: null, promotions: []}\n\n        case ActionTypes.PROMOTIONS_FAILED:\n            return {...state, isLoading: false, errMess: action.payload};\n            \n        default:\n            return state;\n      }\n};","export const InitialFeedback = {\n    firstName: '',\n    lastName: '',\n    phoneNum: '',\n    email: '',\n    agree: false,\n    contactType: 'Phone',\n    feedback: ''\n};","import React, { Component } from 'react';\nimport Main from './components/MainComponent';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\nimport './App.css';\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div className=\"App\">\n            <Main />\n          </div>\n        </BrowserRouter>\n      </Provider>\n    );\n  };\n}\n\nexport default App;","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport { createForms } from 'react-redux-form';\nimport { Resorts } from './resorts';\nimport { Comments } from './comments';\nimport { Partners } from './partners';\nimport { Promotions } from './promotions';\nimport { InitialFeedback } from './forms';\n\n\nexport const ConfigureStore = () => {\n    const store = createStore(\n        combineReducers({\n            resorts: Resorts,\n            comments: Comments,\n            partners: Partners,\n            promotions: Promotions,\n            ...createForms({\n                feedbackForm: InitialFeedback\n            })\n        }),\n            applyMiddleware(thunk, logger)\n    );\n\n    return store;\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'typeface-lobster';\nimport 'typeface-open-sans';\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport App from './App';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}